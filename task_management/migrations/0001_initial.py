# Generated by Django 5.0.6 on 2024-09-27 18:37

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField(help_text='Deadline for the task')),
                ('priority', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('C', 'Critical')], default='M', max_length=1)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('IP', 'In Progress'), ('D', 'Done')], default='P', max_length=2)),
                ('is_recurring', models.BooleanField(default=False, help_text='Does the task repeat?')),
                ('recurring_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20, null=True)),
                ('time_estimate', models.DurationField(blank=True, help_text='Estimated time to complete the task', null=True)),
                ('completion_percentage', models.IntegerField(default=0)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for filtering tasks', max_length=100, null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='task_files/')),
                ('notify_before', models.DurationField(default=datetime.timedelta(seconds=3600), help_text='Notify user before this time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='task_management.category')),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborators', to=settings.AUTH_USER_MODEL)),
                ('dependencies', models.ManyToManyField(blank=True, related_name='dependent_tasks', to='task_management.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['due_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('is_completed', models.BooleanField(default=False)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='task_management.task')),
            ],
        ),
    ]
